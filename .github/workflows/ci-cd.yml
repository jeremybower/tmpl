name: CI/CD
on:
  pull_request:
  push:
    branches:
      - main
    tags-ignore:
      - "v*-prerelease+*" # excludes v1.2.3-prerelease+3

jobs:
  integrate:
    name: Integrate
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
          fetch-depth: "0"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Setup dependencies
        run: go mod download

      - name: Test
        run: make test

      - name: Calculate prerelease version
        id: semver
        uses: paulhatch/semantic-version@v5.4.0
        if: github.ref == 'refs/heads/main'
        with:
          tag_prefix: v
          major_pattern: "#major"
          minor_pattern: "#minor"
          version_format: "v${major}.${minor}.${patch}-prerelease+${increment}"
          search_commit_body: true

      - name: Prepare
        id: prepare
        run: |
          # Change the version based on the branch
          if [[ "${{ github.ref}}" == "refs/heads/main" ]]; then
            # Use the prerelease version when building from main
            echo "version=${{ steps.semver.outputs.version }}" >> "$GITHUB_OUTPUT"
            echo "version_with_sha=${{ steps.semver.outputs.version }} (${{ github.sha }})" >> "$GITHUB_OUTPUT"
          else
            # Use the actual version when building from a tag
            echo "version=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
            echo "version_with_sha=${{ github.ref_name }} (${{ github.sha }})" >> "$GITHUB_OUTPUT"
          fi

      - name: Build
        env:
          VERSION: ${{ steps.prepare.outputs.version_with_sha }}
        run: |
          GOOS=darwin  GOARCH=amd64  OUT=bin/tmpl-darwin-amd64       make build
          GOOS=darwin  GOARCH=arm64  OUT=bin/tmpl-darwin-arm64       make build
          GOOS=linux   GOARCH=amd64  OUT=bin/tmpl-linux-amd64        make build
          GOOS=linux   GOARCH=arm64  OUT=bin/tmpl-linux-arm64        make build
          ls -lh bin

      - name: Checksum
        run: |
          cd bin
          sha256sum tmpl-* > checksums.txt
          sha256sum --check checksums.txt

      - name: Run
        run: |
          test_command() { echo "--------------"; echo "Testing: $1"; eval $1 || exit 1; }
          test_command "bin/tmpl-linux-amd64 --version"
          test_command "bin/tmpl-linux-amd64 --help"
          test_command "bin/tmpl-linux-amd64 generate --help"
          test_command "bin/tmpl-linux-amd64 license"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            bin/tmpl-*
            bin/checksums.txt
            LICENSE

      - name: Tag commit version
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a ${{ steps.prepare.outputs.version }} -m "${{ steps.prepare.outputs.version }}"
          git push origin ${{ steps.semver.outputs.version }}

  deliver:
    name: Deliver
    needs: integrate
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts

      - name: Draft a release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          draft: true
          files: |
            bin/tmpl-*
            bin/checksums.txt
            LICENSE
